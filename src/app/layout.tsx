import type { Metadata } from "next";
import "./globals.css";
import { cookies } from "next/headers";
import { Navbar, ThemeToggle } from "@/components";
import { Footer } from "@/components";
import { ThemeProvider } from "@/contexts/ThemeContext";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

export const metadata: Metadata = {
  title: "RnG solutions",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const cookieStore = await cookies();
  const theme = cookieStore?.get('theme') || {value:'light'};
  type Theme = 'light' | 'dark';
  return (
    <html lang="en" data-theme={theme?.value}>
      <body
        className={`font-sans bg-background text-foreground min-h-screen flex flex-col relative overflow-x-hidden`}
      >
        {/* Subtle Vibrant Background - Blue/Indigo/blue/Gray only */}
        <div className="fixed inset-0 w-full h-full -z-10 opacity-[0.25]">

          <div className="absolute inset-0 bg-gradient-to-br from-blue via-transparent to-transparent"></div>
          <div className="absolute inset-0 bg-gradient-to-tl from-transparent via-indigo to-transparent"></div>
          <div className="absolute inset-0 bg-gradient-to-tr from-transparent via-blue to-transparent"></div>
          <div className="absolute inset-0 bg-gradient-to-bl from-gray-400 via-transparent to-transparent"></div>
          <div className="absolute inset-0 bg-gradient-to-r from-transparent via-blue to-transparent"></div>
          <div className="absolute inset-0 bg-gradient-to-l from-indigo via-transparent to-transparent"></div>
          <div className="absolute inset-0 bg-gradient-to-t from-transparent via-blue to-transparent"></div>
          <div className="absolute inset-0 bg-gradient-to-b from-gray-300 via-transparent to-transparent"></div>
          </div>

        <ThemeProvider initialTheme={theme?.value as Theme}>
          <nav className="top-0 z-50  flex justify-center items-center p-4">
            <Navbar />
            <div className="ml-4">
              <ThemeToggle initialValue={theme?.value as Theme} />
            </div>
          </nav>

          <main className="flex-1">
            {children}
          </main>

          <footer className="">
            <Footer />
          </footer>
        </ThemeProvider>
      </body>
    </html>
  );
}
